>> Introduction to JAVA
    > Java is a class-based, object-oriented programming language
    > known for its simplicity, robustness, and security features, making it a popular choice for enterprise-level applications.
    > Java applications are compiled to byte code that can run on any Java Virtual Machine.
    > Implementation of a Java application program involves a following step. They include:
        1. Creating the program
        3. Running the program
        2. Compiling the program
    > • Compiling the program
        To compile the program, we must run the Java compiler (javac), with the name of the source file on “command prompt” like as follows

        If everything is OK, the “javac” compiler creates a file called “Test.class” containing byte code of the program.

      • Running the program
        We need to use the Java Interpreter to run a program.

    > JAVA Termonoligies
      1.  Java Virtual Machine(JVM): This is generally referred to as JVM. There are three execution phases of a program. \
          They are written, compile and run the program.

        > Writing a program is done by a java programmer.
        > The compilation is done by the JAVAC compiler which is a primary Java compiler included in the Java development kit (JDK). 
          It takes the Java program as input and generates bytecode as output.
        > In the Running phase of a program, JVM executes the bytecode generated by the compiler.

        The function of Java Virtual Machine is to execute the bytecode produced by the compiler. 
        Every Operating System has a different JVM but the output they produce after the execution of 
        bytecode is the same across all the operating systems. This is why Java is known as a platform-independent language.

      2. Java Development Kit(JDK): While we were using the term JDK when we learn about bytecode and JVM. 
          So, as the name suggests, it is a complete Java development kit that includes everything including compiler, 
          Java Runtime Environment (JRE), java debuggers, java docs, etc. For the program to execute in java, we need  
          to install JDK on our computer in order to create, compile and run the java program.

      3. Java Runtime Environment (JRE): JDK includes JRE. JRE installation on our computers allows the java 
          program to run, however, we cannot compile it. JRE includes a browser, JVM, applet support, and plugins. 
          For running the java program, a computer needs JRE.
      
      5. Garbage Collector: In Java, programmers can’t delete the objects. To delete or recollect that memory JVM 
          has a program called Garbage Collector. Garbage Collectors can recollect the objects that are not referenced. 
          So Java makes the life of a programmer easy by handling memory management

      6. ClassPath: The classpath is the file path where the java runtime and Java compiler look for .class files to load. 
          By default, JDK provides many libraries. If you want to include external libraries they should be added to the classpath.